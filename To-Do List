import tkinter as tk
from tkinter import messagebox

# Function to add a new task
def add_task():
    task = task_entry.get()
    if task:
        tasks.append({"description": task, "completed": False})
        list_box.insert(tk.END, task)
        task_entry.delete(0, tk.END)
    else:
        messagebox.showwarning("Error", "Please enter a task.")

# Function to delete a task
def delete_task():
    try:
        task_index = list_box.curselection()[0]
        del tasks[task_index]
        list_box.delete(task_index)
    except IndexError:
        messagebox.showwarning("Error", "Please select a task to delete.")

# Function to mark a task as completed
def mark_as_completed():
    try:
        task_index = list_box.curselection()[0]
        tasks[task_index]['completed'] = True
        list_box.itemconfig(task_index, bg="light green")
    except IndexError:
        messagebox.showwarning("Error", "Please select a task to mark as completed.")

# Function to track tasks
def track_tasks():
    completed_count = sum(1 for task in tasks if task['completed'])
    remaining_count = len(tasks) - completed_count
    message = "Completed Tasks: " + str(completed_count) + "\nRemaining Tasks: " + str(remaining_count)
    messagebox.showinfo("Task Tracking", message)


# Function to clear all completed tasks
def clear_list():
    list_box.delete(0, tk.END)
    global tasks
    tasks = []

# Main code
root = tk.Tk()
root.title("To-Do List")
root.geometry("600x450")
root.configure(bg="lightblue")

tasks = []

heading = tk.Label(root, text="My To-Do List", font=("Kristen ITC",20,"bold","underline"), bg="lightblue", fg="navy")
heading.pack(pady=10)

task_entry = tk.Entry(root, width=40, font=("Arial", 12))
task_entry.pack(pady=5)

add_task_button = tk.Button(root, text="Add Task", width=10, font=("Arial", 12), bg="violet", fg="black",
                            command=add_task)
add_task_button.pack(pady=5)

frame_tasks = tk.Frame(root, bg="lightblue")
frame_tasks.pack(pady=10)

list_box = tk.Listbox(frame_tasks, height=10, width=40, bg="white",font=("Arial", 12))
list_box.pack(side=tk.LEFT, fill=tk.BOTH, expand=True)

scrollbar = tk.Scrollbar(frame_tasks, orient=tk.VERTICAL, command=list_box.yview)
scrollbar.pack(side=tk.RIGHT, fill=tk.Y)
list_box.config(yscrollcommand=scrollbar.set)

button_frame = tk.Frame(root, bg="lightblue")
button_frame.pack(pady=10)

delete_button = tk.Button(button_frame, text="Delete Task", width=10, font=("Arial", 12), bg="tomato", fg="black",
                               command=delete_task)
delete_button.grid(row=0, column=0, padx=5)

mark_completed_button = tk.Button(button_frame, text="Mark as Completed", width=15, font=("Arial", 12), bg="lime",
                                  fg="black", command=mark_as_completed)
mark_completed_button.grid(row=0, column=1, padx=5)

track_button = tk.Button(button_frame, text="Track", width=10, font=("Arial", 12), bg="cyan", fg="black",
                               command=track_tasks)
track_button.grid(row=0, column=2, padx=5)

clear_button = tk.Button(button_frame, text="Clear List", width=15, font=("Arial", 12),bg="orange", fg="black",
                         command=clear_list)
clear_button.grid(row=0, column=3, padx=5)

root.mainloop()
